* Packages and Repos

#+begin_src emacs-lisp

  (require 'package)
  (add-to-list 'package-archives
	       '("melpa" . "http://melpa.org/packages/"))
  (add-to-list 'package-archives
	       '("org" . "http://orgmode.org/elpa/" ))
  (add-to-list 'package-archives 
	       '("marmalade" . "http://marmalade-repo.org/packages/"))
  (package-initialize)
  (when (not package-archive-contents)
    (package-refresh-contents))

  ;; Start using paradox as Package manager
  (use-package paradox
    :ensure t
    :defer t
    :config
    (progn
      (load (locate-user-emacs-file "paradox-token") :noerror :nomessage))
    (paradox-enable))

#+end_src

* General Initialization

#+begin_src emacs-lisp

  (setq inhibit-startup-screen t) ;; hide the startup message
  (setq custom-file "~/.emacs.d/custom.el") ;; set where to save customizations
  (load custom-file)
  (flyspell-mode t) ;; enable spell checking via flyspell
  (add-hook 'after-init-hook 'global-company-mode) ;; enable auto-completion globally via company-mode
  (ivy-mode 1)
  (setq ivy-use-virtual-buffers t)
  (setq ivy-count-format "(%d/%d) ")
  (show-paren-mode t)
  (electric-pair-mode t)
  (add-to-list 'load-path "/usr/share/emacs/site-lisp/ecb") ;; for Emacs code browser configuration
  (require 'ecb) ;; for Emacs code browser configuration
  (all-the-icons-ivy-setup)
  (global-auto-revert-mode 1)

#+end_src

* Appearance

** Theming

#+begin_src emacs-lisp

  (setq solarized-distinct-fringe-background t) ;; make the fringe stand out from the background
  (setq solarized-use-variable-pitch nil) ;; Don't change the font for some headings and titles
  (setq solarized-high-contrast-mode-line t) ;; make the modeline high contrast
  (setq solarized-use-less-bold t) ;; Use less bolding
  (setq solarized-use-more-italic t) ;; Use more italics
  (setq solarized-emphasize-indicators t) ;; Use less colors for indicators such as git:gutter, flycheck and similar
  (setq solarized-scale-org-headlines nil) ;; Don't change size of org-mode headlines (but keep other size-changes)

  ;; Avoid all font-size changes

  (setq solarized-height-minus-1 1.0) 
  (setq solarized-height-plus-1 1.0)
  (setq solarized-height-plus-2 1.0)
  (setq solarized-height-plus-3 1.0)
  (setq solarized-height-plus-4 1.0)
  (setq x-underline-at-descent-line t)

  (load-theme 'solarized-dark)

#+end_src

** Other settings  

#+begin_src emacs-lisp

  (global-hl-line-mode)
  (global-linum-mode)
  (tool-bar-mode -1)
  (set-default-font "monospace 11")
  (setq default-indicate-empty-lines t)

#+end_src

* Communication

This portion of emacs configuration include all settings that are related to communications.

** IRC client settings

#+begin_src emacs-lisp

  (load "~/.emacs.d/.ercrc.el")
  (erc-colorize-mode 1)

#+end_src

* Programming

#+begin_src emacs-lisp

  (add-hook 'prog-mode-hook #'rainbow-delimiters-mode)

#+end_src

** Python

#+begin_src emacs-lisp

  (elpy-enable)
  (setq python-shell-interpreter "ipython"
	python-shell-interpreter-arg "-i --simple-prompt")

  ;; use flycheck not flymake with elpy
  (when (require 'flycheck nil t)
    (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
    (add-hook 'elpy-mode-hook 'flycheck-mode))

  ;; enable autopep8 formatting on save
  (require 'py-autopep8)
  (add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)

#+end_src

** WebDev
   This section is used for various web development settings including HTML, CSS and others.

#+begin_src emacs-lisp

  ;; Using web-mode for different WebDev purposes

  (use-package web-mode
    :ensure t
    :init
    (setq web-mode-enable-current-element-highlight t
	  web-mode-enable-current-column-highlight t)	
    :mode
    (("\\.phtml\\'" . web-mode)
     ("\\.tpl\\.php\\'" . web-mode)
     ("\\.[agj]sp\\'" . web-mode)
     ("\\.as[cp]x\\'" . web-mode)
     ("\\.erb\\'" . web-mode)
     ("\\.mustache\\'" . web-mode)
     ("\\.djhtml\\'" . web-mode)
     ("\\.html?\\'" . web-mode))

    :config
    (setq  web-mode-markup-indent-offset 2
	   web-mode-css-indent-offset 2
	   web-mode-code-indent-offset 2
	   web-mode-style-padding 1
	   web-mode-script-padding 1
	   web-mode-block-padding 0
	   web-mode-enable-auto-pairing t
	   web-mode-enable-css-colorization t
	   web-mode-enable-part-face t
	   web-mode-comment-keywords t
	   web-mode-enable-heredoc-fontification t)
    (set-face-attribute 'web-mode-css-at-rule-face nil :foreground "Pink3")
    )

  ;; Configure Emmet-mode and attach it to Web-mode.

  (use-package emmet-mode
    :ensure t
    :hook (web-mode))

  ;; Configure Skewer-mode

  (use-package skewer-mode
    :ensure t
    :hook web-mode
    :config
    (add-hook 'web-mode-hook 'skewer-css-mode-hook)
    (add-hook 'web-mode-hook 'skewer-html-mode-hook))

#+end_src

* Miscellaneous

#+begin_src emacs-lisp

  (fset 'yes-or-no-p 'y-or-n-p)

#+end_src
